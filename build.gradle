plugins {
	id 'java-library'
	id 'eclipse'
	id 'idea'
	id 'net.neoforged.gradle.userdev' version '7.0.+'
}

version = '1.11'
group = 'bl4ckscor3.mod.globalxp'

base {
	archivesName = 'globalxp-neoforge-1.201'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

processResources {
	exclude ".cache"
}

sourceSets.main.resources {
	srcDir 'src/generated/resources' //include generated files
}

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    configureEach {
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        workingDirectory project.file('run/client')
    }

    server {
        workingDirectory project.file('run/server')
		programArgument '-nogui'
    }

    data {
		workingDirectory project.file('run/data')
		programArguments.addAll '--mod', 'globalxp', '--all', '--output', file('src/generated/resources/').getAbsolutePath()
	}
}

repositories {
    maven {
    	url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
	implementation 'net.neoforged:neoforge:21.0.2-beta'

	implementation "curse.maven:jade-324717:5109393"
	implementation "curse.maven:the-one-probe-245211:5159289"
	implementation "curse.maven:wthit-forge-455982:5299020"
	implementation "curse.maven:badpackets-615134:5288257" //wthit dependency
}

tasks.named('jar', Jar).configure {
	exclude('bl4ckscor3/mod/globalxp/datagen/**') //exclude files from the built jar that are only used to generate the assets & data

    manifest {
        attributes(["Specification-Title": "Global XP",
                    "Specification-Vendor": "bl4ckscor3",
                    "Specification-Version": "${version}",
                    "Implementation-Title": "Global XP",
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor": "bl4ckscor3"])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
	options.release = 21
}